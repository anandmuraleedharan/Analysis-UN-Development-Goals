<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook original-version='18.1' source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' inline='true' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='20190406173622481_axm170075@utdallas.edu_data' name='excel-direct.01hz6td1hle6yk1e35jyd0a8wwr8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/anand/Desktop/20190406173622481_axm170075@utdallas.edu_data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Final sheet' name='excel-direct.0ert0y81vebzvj1fswr9h0dr0tj6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/anand/Desktop/Final sheet.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Goal 1 target 1.1+' type='union'>
          <columns header='yes'>
            <column datatype='integer' name='Goal' />
            <column datatype='string' name='Target' />
            <column datatype='string' name='Indicator' />
            <column datatype='string' name='SeriesCode' />
            <column datatype='string' name='SeriesDescription' />
            <column datatype='integer' name='GeoAreaCode' />
            <column datatype='string' name='GeoAreaName' />
            <column datatype='date' date-parse-format='yyyy' name='TimePeriod' />
            <column datatype='real' name='Value' />
            <column datatype='integer' name='Time_Detail' />
            <column datatype='string' name='Nature' />
            <column datatype='string' name='Units' />
            <column datatype='string' name='(Age)' />
            <column datatype='string' name='(Bounds)' />
            <column datatype='string' name='(Cities)' />
            <column datatype='string' name='(Disability status)' />
            <column datatype='string' name='(Education level)' />
            <column datatype='string' name='(Freq)' />
            <column datatype='string' name='(Hazard type)' />
            <column datatype='string' name='(IHR Capacity)' />
            <column datatype='string' name='(Level/Status)' />
            <column datatype='string' name='(Location)' />
            <column datatype='string' name='(Migratory status)' />
            <column datatype='string' name='(Mode of transportation)' />
            <column datatype='string' name='(Name of international institution)' />
            <column datatype='string' name='(Name of non-communicable disease)' />
            <column datatype='string' name='(Quantile)' />
            <column datatype='string' name='(Reporting Type)' />
            <column datatype='string' name='(Sex)' />
            <column datatype='string' name='(Tariff regime (status))' />
            <column datatype='string' name='(Type of mobile technology)' />
            <column datatype='string' name='(Type of occupation)' />
            <column datatype='string' name='(Type of product)' />
            <column datatype='string' name='(Type of skill)' />
            <column datatype='string' name='(Type of speed)' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.0ert0y81vebzvj1fswr9h0dr0tj6' name='Goal 1 target 1.1' table='[&apos;Goal 1 target 1#1$&apos;]' type='table'>
            <columns gridOrigin='A1:AI10001:no:A1:AI10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Goal' ordinal='0' />
              <column datatype='real' name='Target' ordinal='1' />
              <column datatype='string' name='Indicator' ordinal='2' />
              <column datatype='string' name='SeriesCode' ordinal='3' />
              <column datatype='string' name='SeriesDescription' ordinal='4' />
              <column datatype='integer' name='GeoAreaCode' ordinal='5' />
              <column datatype='string' name='GeoAreaName' ordinal='6' />
              <column datatype='integer' name='TimePeriod' ordinal='7' />
              <column datatype='real' name='Value' ordinal='8' />
              <column datatype='integer' name='Time_Detail' ordinal='9' />
              <column datatype='string' name='Nature' ordinal='10' />
              <column datatype='string' name='Units' ordinal='11' />
              <column datatype='string' name='(Age)' ordinal='12' />
              <column datatype='string' name='(Bounds)' ordinal='13' />
              <column datatype='string' name='(Cities)' ordinal='14' />
              <column datatype='string' name='(Disability status)' ordinal='15' />
              <column datatype='string' name='(Education level)' ordinal='16' />
              <column datatype='string' name='(Freq)' ordinal='17' />
              <column datatype='string' name='(Hazard type)' ordinal='18' />
              <column datatype='string' name='(IHR Capacity)' ordinal='19' />
              <column datatype='string' name='(Level/Status)' ordinal='20' />
              <column datatype='string' name='(Location)' ordinal='21' />
              <column datatype='string' name='(Migratory status)' ordinal='22' />
              <column datatype='string' name='(Mode of transportation)' ordinal='23' />
              <column datatype='string' name='(Name of international institution)' ordinal='24' />
              <column datatype='string' name='(Name of non-communicable disease)' ordinal='25' />
              <column datatype='string' name='(Quantile)' ordinal='26' />
              <column datatype='string' name='(Reporting Type)' ordinal='27' />
              <column datatype='string' name='(Sex)' ordinal='28' />
              <column datatype='string' name='(Tariff regime (status))' ordinal='29' />
              <column datatype='string' name='(Type of mobile technology)' ordinal='30' />
              <column datatype='string' name='(Type of occupation)' ordinal='31' />
              <column datatype='string' name='(Type of product)' ordinal='32' />
              <column datatype='string' name='(Type of skill)' ordinal='33' />
              <column datatype='string' name='(Type of speed)' ordinal='34' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ert0y81vebzvj1fswr9h0dr0tj6' name='Goal 1 target 1.2' table='[&apos;Goal 1 target 1#2$&apos;]' type='table'>
            <columns gridOrigin='A1:AI733:no:A1:AI733:0' header='yes' outcome='6'>
              <column datatype='integer' name='Goal' ordinal='0' />
              <column datatype='real' name='Target' ordinal='1' />
              <column datatype='string' name='Indicator' ordinal='2' />
              <column datatype='string' name='SeriesCode' ordinal='3' />
              <column datatype='string' name='SeriesDescription' ordinal='4' />
              <column datatype='integer' name='GeoAreaCode' ordinal='5' />
              <column datatype='string' name='GeoAreaName' ordinal='6' />
              <column datatype='integer' name='TimePeriod' ordinal='7' />
              <column datatype='real' name='Value' ordinal='8' />
              <column datatype='integer' name='Time_Detail' ordinal='9' />
              <column datatype='string' name='Nature' ordinal='10' />
              <column datatype='string' name='Units' ordinal='11' />
              <column datatype='string' name='(Age)' ordinal='12' />
              <column datatype='string' name='(Bounds)' ordinal='13' />
              <column datatype='string' name='(Cities)' ordinal='14' />
              <column datatype='string' name='(Disability status)' ordinal='15' />
              <column datatype='string' name='(Education level)' ordinal='16' />
              <column datatype='string' name='(Freq)' ordinal='17' />
              <column datatype='string' name='(Hazard type)' ordinal='18' />
              <column datatype='string' name='(IHR Capacity)' ordinal='19' />
              <column datatype='string' name='(Level/Status)' ordinal='20' />
              <column datatype='string' name='(Location)' ordinal='21' />
              <column datatype='string' name='(Migratory status)' ordinal='22' />
              <column datatype='string' name='(Mode of transportation)' ordinal='23' />
              <column datatype='string' name='(Name of international institution)' ordinal='24' />
              <column datatype='string' name='(Name of non-communicable disease)' ordinal='25' />
              <column datatype='string' name='(Quantile)' ordinal='26' />
              <column datatype='string' name='(Reporting Type)' ordinal='27' />
              <column datatype='string' name='(Sex)' ordinal='28' />
              <column datatype='string' name='(Tariff regime (status))' ordinal='29' />
              <column datatype='string' name='(Type of mobile technology)' ordinal='30' />
              <column datatype='string' name='(Type of occupation)' ordinal='31' />
              <column datatype='string' name='(Type of product)' ordinal='32' />
              <column datatype='string' name='(Type of skill)' ordinal='33' />
              <column datatype='string' name='(Type of speed)' ordinal='34' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ert0y81vebzvj1fswr9h0dr0tj6' name='Goal 1 target 1.3' table='[&apos;Goal 1 target 1#3$&apos;]' type='table'>
            <columns gridOrigin='A1:AI3559:no:A1:AI3559:0' header='yes' outcome='6'>
              <column datatype='integer' name='Goal' ordinal='0' />
              <column datatype='real' name='Target' ordinal='1' />
              <column datatype='string' name='Indicator' ordinal='2' />
              <column datatype='string' name='SeriesCode' ordinal='3' />
              <column datatype='string' name='SeriesDescription' ordinal='4' />
              <column datatype='integer' name='GeoAreaCode' ordinal='5' />
              <column datatype='string' name='GeoAreaName' ordinal='6' />
              <column datatype='integer' name='TimePeriod' ordinal='7' />
              <column datatype='real' name='Value' ordinal='8' />
              <column datatype='integer' name='Time_Detail' ordinal='9' />
              <column datatype='string' name='Nature' ordinal='10' />
              <column datatype='string' name='Units' ordinal='11' />
              <column datatype='string' name='(Age)' ordinal='12' />
              <column datatype='string' name='(Bounds)' ordinal='13' />
              <column datatype='string' name='(Cities)' ordinal='14' />
              <column datatype='string' name='(Disability status)' ordinal='15' />
              <column datatype='string' name='(Education level)' ordinal='16' />
              <column datatype='string' name='(Freq)' ordinal='17' />
              <column datatype='string' name='(Hazard type)' ordinal='18' />
              <column datatype='string' name='(IHR Capacity)' ordinal='19' />
              <column datatype='string' name='(Level/Status)' ordinal='20' />
              <column datatype='string' name='(Location)' ordinal='21' />
              <column datatype='string' name='(Migratory status)' ordinal='22' />
              <column datatype='string' name='(Mode of transportation)' ordinal='23' />
              <column datatype='string' name='(Name of international institution)' ordinal='24' />
              <column datatype='string' name='(Name of non-communicable disease)' ordinal='25' />
              <column datatype='string' name='(Quantile)' ordinal='26' />
              <column datatype='string' name='(Reporting Type)' ordinal='27' />
              <column datatype='string' name='(Sex)' ordinal='28' />
              <column datatype='string' name='(Tariff regime (status))' ordinal='29' />
              <column datatype='string' name='(Type of mobile technology)' ordinal='30' />
              <column datatype='string' name='(Type of occupation)' ordinal='31' />
              <column datatype='string' name='(Type of product)' ordinal='32' />
              <column datatype='string' name='(Type of skill)' ordinal='33' />
              <column datatype='string' name='(Type of speed)' ordinal='34' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ert0y81vebzvj1fswr9h0dr0tj6' name='Goal 1 target 1.5' table='[&apos;Goal 1 target 1#5$&apos;]' type='table'>
            <columns gridOrigin='A1:AI10001:no:A1:AI10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Goal' ordinal='0' />
              <column datatype='real' name='Target' ordinal='1' />
              <column datatype='string' name='Indicator' ordinal='2' />
              <column datatype='string' name='SeriesCode' ordinal='3' />
              <column datatype='string' name='SeriesDescription' ordinal='4' />
              <column datatype='integer' name='GeoAreaCode' ordinal='5' />
              <column datatype='string' name='GeoAreaName' ordinal='6' />
              <column datatype='integer' name='TimePeriod' ordinal='7' />
              <column datatype='real' name='Value' ordinal='8' />
              <column datatype='integer' name='Time_Detail' ordinal='9' />
              <column datatype='string' name='Nature' ordinal='10' />
              <column datatype='string' name='Units' ordinal='11' />
              <column datatype='string' name='(Age)' ordinal='12' />
              <column datatype='string' name='(Bounds)' ordinal='13' />
              <column datatype='string' name='(Cities)' ordinal='14' />
              <column datatype='string' name='(Disability status)' ordinal='15' />
              <column datatype='string' name='(Education level)' ordinal='16' />
              <column datatype='string' name='(Freq)' ordinal='17' />
              <column datatype='string' name='(Hazard type)' ordinal='18' />
              <column datatype='string' name='(IHR Capacity)' ordinal='19' />
              <column datatype='string' name='(Level/Status)' ordinal='20' />
              <column datatype='string' name='(Location)' ordinal='21' />
              <column datatype='string' name='(Migratory status)' ordinal='22' />
              <column datatype='string' name='(Mode of transportation)' ordinal='23' />
              <column datatype='string' name='(Name of international institution)' ordinal='24' />
              <column datatype='string' name='(Name of non-communicable disease)' ordinal='25' />
              <column datatype='string' name='(Quantile)' ordinal='26' />
              <column datatype='string' name='(Reporting Type)' ordinal='27' />
              <column datatype='string' name='(Sex)' ordinal='28' />
              <column datatype='string' name='(Tariff regime (status))' ordinal='29' />
              <column datatype='string' name='(Type of mobile technology)' ordinal='30' />
              <column datatype='string' name='(Type of occupation)' ordinal='31' />
              <column datatype='string' name='(Type of product)' ordinal='32' />
              <column datatype='string' name='(Type of skill)' ordinal='33' />
              <column datatype='string' name='(Type of speed)' ordinal='34' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ert0y81vebzvj1fswr9h0dr0tj6' name='Goal 1 target 1.a' table='[&apos;Goal 1 target 1#a$&apos;]' type='table'>
            <columns gridOrigin='A1:AI1867:no:A1:AI1867:0' header='yes' outcome='6'>
              <column datatype='integer' name='Goal' ordinal='0' />
              <column datatype='string' name='Target' ordinal='1' />
              <column datatype='string' name='Indicator' ordinal='2' />
              <column datatype='string' name='SeriesCode' ordinal='3' />
              <column datatype='string' name='SeriesDescription' ordinal='4' />
              <column datatype='integer' name='GeoAreaCode' ordinal='5' />
              <column datatype='string' name='GeoAreaName' ordinal='6' />
              <column datatype='integer' name='TimePeriod' ordinal='7' />
              <column datatype='real' name='Value' ordinal='8' />
              <column datatype='integer' name='Time_Detail' ordinal='9' />
              <column datatype='string' name='Nature' ordinal='10' />
              <column datatype='string' name='Units' ordinal='11' />
              <column datatype='string' name='(Age)' ordinal='12' />
              <column datatype='string' name='(Bounds)' ordinal='13' />
              <column datatype='string' name='(Cities)' ordinal='14' />
              <column datatype='string' name='(Disability status)' ordinal='15' />
              <column datatype='string' name='(Education level)' ordinal='16' />
              <column datatype='string' name='(Freq)' ordinal='17' />
              <column datatype='string' name='(Hazard type)' ordinal='18' />
              <column datatype='string' name='(IHR Capacity)' ordinal='19' />
              <column datatype='string' name='(Level/Status)' ordinal='20' />
              <column datatype='string' name='(Location)' ordinal='21' />
              <column datatype='string' name='(Migratory status)' ordinal='22' />
              <column datatype='string' name='(Mode of transportation)' ordinal='23' />
              <column datatype='string' name='(Name of international institution)' ordinal='24' />
              <column datatype='string' name='(Name of non-communicable disease)' ordinal='25' />
              <column datatype='string' name='(Quantile)' ordinal='26' />
              <column datatype='string' name='(Reporting Type)' ordinal='27' />
              <column datatype='string' name='(Sex)' ordinal='28' />
              <column datatype='string' name='(Tariff regime (status))' ordinal='29' />
              <column datatype='string' name='(Type of mobile technology)' ordinal='30' />
              <column datatype='string' name='(Type of occupation)' ordinal='31' />
              <column datatype='string' name='(Type of product)' ordinal='32' />
              <column datatype='string' name='(Type of skill)' ordinal='33' />
              <column datatype='string' name='(Type of speed)' ordinal='34' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Goal]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Goal</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Target]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Target</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SeriesCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SeriesCode]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>SeriesCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SeriesDescription</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SeriesDescription]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>SeriesDescription</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeoAreaCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GeoAreaCode]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>GeoAreaCode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeoAreaName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GeoAreaName]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>GeoAreaName</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimePeriod</remote-name>
            <remote-type>7</remote-type>
            <local-name>[TimePeriod]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>TimePeriod</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time_Detail</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Time_Detail]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Time_Detail</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nature</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Nature]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Nature</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Units]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Units</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Age)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Age)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Age)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Bounds)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Bounds)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Bounds)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Cities)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Cities)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Cities)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Disability status)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Disability status)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Disability status)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Education level)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Education level)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Education level)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Freq)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Freq)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Freq)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Hazard type)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Hazard type)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Hazard type)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(IHR Capacity)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(IHR Capacity)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(IHR Capacity)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Level/Status)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Level/Status)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Level/Status)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Location)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Location)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Location)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Migratory status)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Migratory status)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Migratory status)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Mode of transportation)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Mode of transportation)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Mode of transportation)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Name of international institution)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Name of international institution)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Name of international institution)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Name of non-communicable disease)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Name of non-communicable disease)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Name of non-communicable disease)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Quantile)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Quantile)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Quantile)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Reporting Type)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Reporting Type)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Reporting Type)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Sex)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Sex)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Sex)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Tariff regime (status))</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Tariff regime (status))]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Tariff regime (status))</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Type of mobile technology)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Type of mobile technology)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Type of mobile technology)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Type of occupation)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Type of occupation)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Type of occupation)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Type of product)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Type of product)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Type of product)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Type of skill)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Type of skill)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Type of skill)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(Type of speed)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[(Type of speed)]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>(Type of speed)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Goal 1 target 1.1+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[(Age)]' role='dimension' type='nominal' />
      <column datatype='string' name='[(Sex)]' role='dimension' type='nominal' />
      <column caption='Geo Area Code' datatype='integer' default-format='*000' name='[GeoAreaCode]' role='dimension' semantic-role='[AreaCode].[Name]' type='ordinal' />
      <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Series Code' datatype='string' name='[SeriesCode]' role='dimension' type='nominal' />
      <column caption='Series Description' datatype='string' name='[SeriesDescription]' role='dimension' type='nominal' />
      <column caption='Time Period' datatype='date' name='[TimePeriod]' role='dimension' type='quantitative' />
      <column caption='Time Detail' datatype='integer' name='[Time_Detail]' role='measure' type='quantitative' />
      <column-instance column='[(Age)]' derivation='None' name='[none:(Age):nk]' pivot='key' type='nominal' />
      <column-instance column='[(Sex)]' derivation='None' name='[none:(Sex):nk]' pivot='key' type='nominal' />
      <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.75' measure-ordering='alphabetic' measure-percentage='0.25' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:(Sex):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;FEMALE&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;BOTHSEX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MALE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:(Age):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;25+&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;15+&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;15-24&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GeoAreaName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China, Hong Kong Special Administrative Region&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C´te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latin America and the Caribbean&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern and South-Eastern Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China, Macao Special Administrative Region&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Africa and Western Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Landlocked developing countries (LLDCs)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South-Eastern Asia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Other non-specified areas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southern Europe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia and New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Europe and Northern America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Melanesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania (exc. Australia and New Zealand)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central and Southern Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Least Developed Countries (LDCs)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Europe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Small island developing States (SIDS)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1.1ByAge'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='23'>By Age</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
            <column datatype='string' name='[(Age)]' role='dimension' type='nominal' />
            <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Units]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(Age)]' derivation='None' name='[none:(Age):nk]' pivot='key' type='nominal' />
            <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Units]' derivation='None' name='[none:Units:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk]'>
            <groupfilter from='&quot;15-24&quot;' function='range' level='[none:(Age):nk]' to='&quot;25+&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Value])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Australia&quot;' />
                  <groupfilter from='&quot;Austria&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Brazil&quot;' />
                  <groupfilter from='&quot;Brunei Darussalam&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Central African Republic&quot;' />
                  <groupfilter from='&quot;Chad&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;China&quot;' />
                  <groupfilter from='&quot;Colombia&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Croatia&quot;' />
                  <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Ukraine&quot;' />
                  <groupfilter from='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]'>
            <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;1.1.1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]'>
            <groupfilter function='member' level='[none:Units:nk]' member='&quot;PERCENT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</rows>
        <cols>([federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk] / [federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk])</cols>
      </table>
      <simple-id uuid='{AEBE2820-3637-4E32-9B6F-E211C1E74986}' />
    </worksheet>
    <worksheet name='1.1ByCountrywise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='23'>Countries with Population Proportion below Poverty line</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
            <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]'>
            <groupfilter function='level-members' level='[none:GeoAreaName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
              <color column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' />
              <geometry column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[Latitude (generated)]</rows>
        <cols>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E5B6C7BA-A369-4673-B726-BFA427B07897}' />
    </worksheet>
    <worksheet name='1.1ByGender'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='23'>By Gender</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
            <column datatype='string' name='[(Sex)]' role='dimension' type='nominal' />
            <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Units]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(Sex)]' derivation='None' name='[none:(Sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Units]' derivation='None' name='[none:Units:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Sex):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:(Sex):nk]' member='&quot;FEMALE&quot;' />
              <groupfilter function='member' level='[none:(Sex):nk]' member='&quot;MALE&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Value])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Australia&quot;' />
                  <groupfilter from='&quot;Austria&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Brazil&quot;' />
                  <groupfilter from='&quot;Brunei Darussalam&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Central African Republic&quot;' />
                  <groupfilter from='&quot;Chad&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;China&quot;' />
                  <groupfilter from='&quot;Colombia&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Croatia&quot;' />
                  <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Ukraine&quot;' />
                  <groupfilter from='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' function='range' level='[none:GeoAreaName:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]'>
            <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;1.1.1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]'>
            <groupfilter function='member' level='[none:Units:nk]' member='&quot;PERCENT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Sex):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</rows>
        <cols>([federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk] / [federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Sex):nk])</cols>
      </table>
      <simple-id uuid='{730FCBD8-E53C-49D7-BFB5-3B325EC0DEF6}' />
    </worksheet>
    <worksheet name='1.3ByCountrywise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Calibri' fontsize='22'>Proportion of population covered by social protection floors/systems</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
            <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Units]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Units]' derivation='None' name='[none:Units:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]'>
            <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;1.3.1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]'>
            <groupfilter function='member' level='[none:Units:nk]' member='&quot;PERCENT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' />
              <color column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' />
              <text column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6A0B4149-BD37-4DC9-A1CD-3B3D57F2E348}' />
    </worksheet>
    <worksheet name='1.5.2 top 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Calibri'>Economic Loss Attributed to Disasters(Top 5)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
            <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Units]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Units]' derivation='None' name='[none:Units:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:GeoAreaName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]'>
            <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;1.5.2&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]'>
            <groupfilter function='member' level='[none:Units:nk]' member='&quot;PERCENT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</rows>
        <cols>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</cols>
      </table>
      <simple-id uuid='{5F390C54-0361-48D5-AD06-13BB2B5860C3}' />
    </worksheet>
    <worksheet name='1.5.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Calibri'>Local Disaster and Risk Reduction Policies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
            <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column datatype='string' name='[Units]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Units]' derivation='None' name='[none:Units:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]'>
            <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;1.5.4&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]'>
            <groupfilter function='member' level='[none:Units:nk]' member='&quot;NUMBER&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' />
              <text column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
              <color column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3626C911-07FC-4817-B051-1A90C0510AFE}' />
    </worksheet>
    <worksheet name='1.5ByCountrywise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri' fontsize='24'>Proportion of Deaths and Missing due to Disasters per 100,000 people</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
            <column datatype='string' name='[(Age)]' role='dimension' type='nominal' />
            <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(Age)]' derivation='None' name='[none:(Age):nk]' pivot='key' type='nominal' />
            <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:GeoAreaName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]'>
            <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;1.5.1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</column>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' value='23' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' value='22' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk] / [federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk])</rows>
        <cols>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</cols>
      </table>
      <simple-id uuid='{8EDD9A89-015C-486D-A4B4-DA99246B470E}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Calibri' fontsize='22'>Yearly Trend in Proportion of Poverty  - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
          </datasources>
          <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
            <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Time Period' datatype='date' name='[TimePeriod]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TimePeriod]' derivation='Year-Trunc' name='[tyr:TimePeriod:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:GeoAreaName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[sum:Value:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</rows>
        <cols>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[sum:Value:qk]</cols>
        <pages>
          <column>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[tyr:TimePeriod:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{25DC1B27-026D-4122-AFEC-9C0B3D79D8BD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='1.5'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='5' param='horz' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='3' type='layout-basic' w='89000' x='500' y='889'>
              <zone h='98222' id='1' name='1.5ByCountrywise' w='44500' x='45000' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='7' name='1.5.2 top 5' w='44500' x='500' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='8' name='1.5.4' w='44500' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98222' id='4' is-fixed='true' param='vert' type='layout-flow' w='10000' x='89500' y='889'>
              <zone h='50000' id='6' name='1.5ByCountrywise' pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' w='10000' x='89500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='11' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='12' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='280' h='49111' id='8' is-fixed='true' name='1.5.4' w='44500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98222' id='1' is-fixed='true' name='1.5ByCountrywise' w='44500' x='45000' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='50000' id='6' name='1.5ByCountrywise' pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' w='10000' x='89500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='7' is-fixed='true' name='1.5.2 top 5' w='44500' x='500' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D0269FDA-8328-4EA5-91E7-CCBE618D2F39}' />
    </dashboard>
    <dashboard name='Target 1.1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='20190406173622481_axm170075@utd (20190406173622481_axm170075@utdallas.edu_data)' name='federated.1hohpt91sg4ihz1dwrhcu0rin14v' />
      </datasources>
      <datasource-dependencies datasource='federated.1hohpt91sg4ihz1dwrhcu0rin14v'>
        <column caption='Geo Area Name' datatype='string' name='[GeoAreaName]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[GeoAreaName]' derivation='None' name='[none:GeoAreaName:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='84442' id='8' param='horz' type='layout-flow' w='99000' x='500' y='14669'>
            <zone h='84442' id='6' type='layout-basic' w='89000' x='500' y='14669'>
              <zone h='35000' id='5' name='1.1ByAge' w='44500' x='500' y='64111'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49442' id='10' name='1.1ByCountrywise' w='89000' x='500' y='14669'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35000' id='13' name='1.1ByGender' w='44500' x='45000' y='64111'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='84442' id='7' is-fixed='true' param='vert' type='layout-flow' w='10000' x='89500' y='14669'>
              <zone h='15000' id='9' name='1.1ByAge' pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' w='10000' x='89500' y='14669'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8111' id='11' name='1.1ByCountrywise' pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' type='color' w='10000' x='89500' y='29669'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='61331' id='14' name='1.1ByCountrywise' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='filter' values='database' w='10000' x='89500' y='37780'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='13780' id='12' type='text' w='99000' x='500' y='889'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Calibri' fontsize='22'>Population Proportion below Poverty Line</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='20' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone forceUpdate='true' h='13780' id='12' type='text' w='99000' x='500' y='889'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Calibri' fontsize='22'>Population Proportion below Poverty Line</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='61331' id='14' mode='checkdropdown' name='1.1ByCountrywise' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='filter' values='database' w='10000' x='89500' y='37780'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49442' id='10' is-fixed='true' name='1.1ByCountrywise' w='89000' x='500' y='14669'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8111' id='11' name='1.1ByCountrywise' pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' type='color' w='10000' x='89500' y='29669'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35000' id='5' is-fixed='true' name='1.1ByAge' w='44500' x='500' y='64111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15000' id='9' name='1.1ByAge' pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' w='10000' x='89500' y='14669'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35000' id='13' is-fixed='true' name='1.1ByGender' w='44500' x='45000' y='64111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{421357A2-200B-4AD9-8838-9DC9552756FF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='1.1ByGender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2018-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Sex):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[tyr:TimePeriod:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[yr:TimePeriod:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45AF53DF-4C73-4D30-8132-515250125FE2}' />
    </window>
    <window class='worksheet' name='1.1ByAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2018-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Sex):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[tyr:TimePeriod:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[yr:TimePeriod:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CA0E883-16BF-4434-84EA-A914FA918DEC}' />
    </window>
    <window class='worksheet' name='1.1ByCountrywise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2018-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Level/Status):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Sex):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[tyr:TimePeriod:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[yr:TimePeriod:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39EEDE01-37DD-4268-BC36-891AFD68B6C2}' />
    </window>
    <window class='worksheet' name='1.3ByCountrywise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2017-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Age):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:(Sex):nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[tyr:TimePeriod:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[yr:TimePeriod:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3969F144-5921-4E7A-B8FE-96AF7C5F07E1}' />
    </window>
    <window class='worksheet' name='1.5ByCountrywise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[avg:Value:qk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45D8A80E-A3DC-4C63-B14C-31F62A332871}' />
    </window>
    <window class='dashboard' name='Target 1.1'>
      <viewpoints>
        <viewpoint name='1.1ByAge'>
          <current-page>
            <multibucket>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='1.1ByCountrywise'>
          <current-page>
            <multibucket>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='1.1ByGender'>
          <current-page>
            <multibucket>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{A50AA521-01AC-4679-A12E-00716E7D0622}' />
    </window>
    <window class='dashboard' name='1.5'>
      <viewpoints>
        <viewpoint name='1.5.2 top 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='1.5.4' />
        <viewpoint name='1.5ByCountrywise'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{C19A08EF-79A8-4741-98DA-90FB410D2F3C}' />
    </window>
    <window class='worksheet' name='1.5.2 top 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B428D9E3-217C-412B-8B3D-1E3D439FD767}' />
    </window>
    <window class='worksheet' name='1.5.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Indicator:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:Units:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A7616DA-6BD9-4349-A50F-7A87F0442DEB}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2018-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[none:GeoAreaName:nk]</field>
            <field>[federated.1hohpt91sg4ihz1dwrhcu0rin14v].[tyr:TimePeriod:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3E1F49F-FE19-461A-9655-51089FC4FE2F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1.1ByAge' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.1ByCountrywise' width='192'>
      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
      4WB0xDY/DEMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.1ByGender' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.3ByCountrywise' width='192'>
      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
      /B/5VKbsEKvgXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.5' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.5.2 top 5' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.5.4' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.5ByCountrywise' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      4gwgRNr/B2dYm9GvRqayAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Target 1.1' width='192'>
      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
      gwFnAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
